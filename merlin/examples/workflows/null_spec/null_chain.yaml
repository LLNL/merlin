description:
    name: null_chain
    description: |
        Run N_SAMPLES steps of TIME seconds each at CONC concurrency.
        May be used to measure overhead in merlin.
        Iterates thru a chain of workflows.

batch:
    type: slurm

env:
    variables:
        OUTPUT_PATH: ./
        TIME: 1
        N_SAMPLES: 1
        MAX_SAMPLES: 100000
        CONC: 1
        RUN_ID: 0
        N_WORK: 0
        QUEUE: queue_s$(N_SAMPLES)_c$(N_WORK)_r$(RUN_ID)
        WORKER: worker_s$(N_SAMPLES)_c$(N_WORK)_r$(RUN_ID)

study:
    - name: null_step
      description: exit immediately
      run:
        cmd: |
            #echo $(SAMPLE)
            sleep $(TIME)
            exit $(MERLIN_SUCCESS)
        task_queue: $(QUEUE)

    - name: verify
      description: echo done
      run:
        cmd: echo "Done"
        depends: [null_step_*]
        task_queue: $(QUEUE)

    - name: launch_next
      description: launch this workflow with different args
      run:
        cmd: |
            NEXT_SAMPLES=$(($(N_SAMPLES)*10))
            if ((NEXT_SAMPLES <= $(MAX_SAMPLES))) ; then
                echo "Starting next iteration"
                cd $(MERLIN_WORKSPACE)/../
                merlin run $(SPECROOT)/null_chain.yaml --vars N_SAMPLES=$NEXT_SAMPLES CONC=$(CONC) RUN_ID=$(RUN_ID) N_WORK=$(N_WORK) QUEUE=$(QUEUE) TIME=$(TIME) MAX_SAMPLES=$(MAX_SAMPLES)
            else
                echo "Chain complete"
            fi
        depends: [verify]
        task_queue: $(QUEUE)

merlin:
    resources:
        workers:
            $(WORKER):
                args: -O fair --prefetch-multiplier 1 -E -l info --concurrency $(CONC) --logfile=%%p.log
    samples:
        generate:
            cmd: python3 $(SPECROOT)/scripts/make_samples.py --number $(N_SAMPLES) --filepath $(MERLIN_INFO)/samples_file.npy
        file: $(MERLIN_INFO)/samples_file.npy
        column_labels: [SAMPLE]
